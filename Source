library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_unsigned.all;

entity sorter is
port (clk: in std_logic;
reset: in std_logic;
weight: in std_logic_vector (0 to 11);
grp1, grp2, grp3, grp4, grp5, grp6: out std_logic_vector (0 to 7);
currentGrp: out std_logic_vector (0 to 2));
end sorter;

architecture bhv of sorter is
signal weight_measure: std_logic_vector (0 to 11);
begin
process(clk, reset)

begin
if (reset = '1') then
grp1 <= "00000000";
grp2 <= "00000000";
grp3 <= "00000000";
grp4 <= "00000000";
grp5 <= "00000000";
grp6 <= "00000000";
currentGrp <= "000";

elsif (clk'event and clk = '1') then
weight_measure <= weight;
if (weight = 0) then
currentGrp <= "000";

elsif (weight > 0 and weight <= 200 and weight_measure = 0) then
grp1 <= grp1 + 1;
currentGrp <= "001";

elsif (weight > 200 and weight <= 500 and weight_measure = 0)then
grp2 <= grp2 + 1;
currentGrp <= "010";

elsif (weight > 500 and weight <= 800 and weight_measure = 0)then
grp3 <= grp3 + 1;
currentGrp <= "011";

elsif (weight > 800 and weight <= 1000 and weight_measure = 0) then
grp4 <= grp4 + 1;
currentGrp <= "100";

elsif (weight > 1000 and weight <= 2000 and weight_measure = 0) then
grp5 <= grp5 + 1;
currentGrp <= "101";

elsif (weight > 2000 and weight_measure = 0) then
grp6 <= grp6 + 1;
currentGrp <= "110";

else
grp1 <= grp1;
grp2 <= grp2;
grp3 <= grp3;
grp4 <= grp4;
grp5 <= grp5;
grp6 <= grp6;
end if;
end if;
end process;
end bhv;
